[{"C:\\Projects\\goit-react-hw-02-phonebook\\src\\index.js":"1","C:\\Projects\\goit-react-hw-02-phonebook\\src\\App.js":"2","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactForm\\index.js":"3","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactsList\\index.js":"4","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\Filter\\index.js":"5","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactForm\\ContactForm.js":"6","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\Filter\\Filter.js":"7","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactsList\\ContactList.js":"8","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactsList\\ContactListItem.js":"9"},{"size":208,"mtime":1621704595563,"results":"10","hashOfConfig":"11"},{"size":2067,"mtime":1621754458678,"results":"12","hashOfConfig":"11"},{"size":40,"mtime":1621704595560,"results":"13","hashOfConfig":"11"},{"size":40,"mtime":1621704595561,"results":"14","hashOfConfig":"11"},{"size":35,"mtime":1621704595563,"results":"15","hashOfConfig":"11"},{"size":2496,"mtime":1621754288087,"results":"16","hashOfConfig":"11"},{"size":463,"mtime":1621704595562,"results":"17","hashOfConfig":"11"},{"size":520,"mtime":1621704595561,"results":"18","hashOfConfig":"11"},{"size":470,"mtime":1621704595561,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yb5v9a",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\goit-react-hw-02-phonebook\\src\\index.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\App.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactForm\\index.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactsList\\index.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\Filter\\index.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactForm\\ContactForm.js",["39","40"],"import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nconst INITIAL__STATE = {\r\n     name: \"\",\r\n        number: \"\",\r\n}\r\n\r\nclass ContactForm extends Component {\r\n   static propTypes = {\r\n    onAdd : PropTypes.func.isRequired,\r\n    onCheckUnique: PropTypes.func.isRequired,\r\n  };\r\n        \r\n\r\n    state = INITIAL__STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n    \r\n        const { name, value } = target;\r\n        this.setState({[name]: value})\r\n}\r\n\r\n    handleFormSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n        const { name, number } = this.state;\r\n        const { onAdd } = this.props;\r\n        const isValidatedForm = this.validateForm()\r\n        if (!isValidatedForm)   return\r\n        onAdd({ id: uuid(), name, number })\r\n        this.resetForm()\r\n    }\r\n    \r\n\r\n    validateForm = () => {\r\nconst { name, number } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !number) {\r\n            alert('Some fild is empty')\r\n            return false\r\n        }\r\n        return onCheckUnique(name);\r\n    }\r\n    \r\n    \r\n    resetForm = () => this.setState(INITIAL__STATE)\r\n\r\n    \r\n    \r\n    render() {\r\n        const { name, number } = this.state;\r\n\r\n        return (\r\n\r\n            <form onSubmit={this.handleFormSubmit}>\r\n\r\n<input\r\n  type=\"text\"\r\n  name=\"name\"\r\n  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n  required onChange={this.handleChangeForm} \r\n/>\r\n\r\n                <input\r\n  type=\"tel\"\r\n  name=\"number\"\r\n  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n  title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n  required onChange={this.handleChangeForm }\r\n/>\r\n  \r\n                {/* <input type='text' name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm} />\r\n                <input type='tel' name='phone' placeholder='Enter phone number' value={phone} onChange={this.handleChangeForm }/> */}\r\n<button type='submit'>Add Contact</button>\r\n            </form>\r\n        )\r\n}\r\n\r\n}\r\n\r\n\r\n\r\nexport default ContactForm;","C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\Filter\\Filter.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactsList\\ContactList.js",[],"C:\\Projects\\goit-react-hw-02-phonebook\\src\\Components\\ContactsList\\ContactListItem.js",[],{"ruleId":"41","severity":1,"message":"42","line":53,"column":17,"nodeType":"43","messageId":"44","endLine":53,"endColumn":21},{"ruleId":"41","severity":1,"message":"45","line":53,"column":23,"nodeType":"43","messageId":"44","endLine":53,"endColumn":29},"no-unused-vars","'name' is assigned a value but never used.","Identifier","unusedVar","'number' is assigned a value but never used."]