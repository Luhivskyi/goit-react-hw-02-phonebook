{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\goit-react-hw-02-phonebook\\\\src\\\\Components\\\\ContactForm\\\\ContactForm.js\";\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL__STATE = {\n  name: \"\",\n  phone: \"\"\n};\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = INITIAL__STATE;\n\n    this.handleChangeForm = ({\n      target\n    }) => {\n      const {\n        name,\n        value\n      } = target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      const {\n        name,\n        phone\n      } = this.state;\n      const {\n        onAdd\n      } = this.props;\n      const isValidatedForm = this.validateForm();\n      if (!isValidatedForm) return;\n      onAdd({\n        id: uuid(),\n        name,\n        phone\n      });\n      this.resetForm();\n    };\n\n    this.validateForm = () => {\n      const {\n        name,\n        phone\n      } = this.state;\n      const {\n        onCheckUnique\n      } = this.props;\n\n      if (!name || !phone) {\n        alert('Some fild is empty');\n        return false;\n      }\n\n      return onCheckUnique(name);\n    };\n\n    this.resetForm = () => this.setState(INITIAL__STATE);\n  }\n\n  render() {\n    const {\n      name,\n      phone\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Enter name\",\n        value: name,\n        onChange: this.handleChangeForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        placeholder: \"Enter phone number\",\n        value: phone,\n        onChange: this.handleChangeForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired\n};\nexport default ContactForm;","map":{"version":3,"sources":["C:/Projects/goit-react-hw-02-phonebook/src/Components/ContactForm/ContactForm.js"],"names":["Component","PropTypes","v4","uuid","INITIAL__STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","isValidatedForm","validateForm","id","resetForm","onCheckUnique","alert","render","propTypes","func","isRequired"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;AAEA,MAAMC,cAAc,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAEfC,EAAAA,KAAK,EAAE;AAFQ,CAAvB;;AAKA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAOhCQ,KAPgC,GAOxBJ,cAPwB;;AAAA,SAShCK,gBATgC,GASb,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAgB;AAE/B,YAAM;AAAEL,QAAAA,IAAF;AAAQM,QAAAA;AAAR,UAAkBD,MAAxB;AACA,WAAKE,QAAL,CAAc;AAAC,SAACP,IAAD,GAAQM;AAAT,OAAd;AACP,KAbmC;;AAAA,SAehCE,gBAfgC,GAeZC,KAAD,IAAW;AAC9BA,MAAAA,KAAK,CAACC,cAAN;AAEI,YAAM;AAAEV,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,KAAKE,KAA7B;AACA,YAAM;AAAEQ,QAAAA;AAAF,UAAY,KAAKC,KAAvB;AACA,YAAMC,eAAe,GAAG,KAAKC,YAAL,EAAxB;AACA,UAAI,CAACD,eAAL,EAAwB;AACxBF,MAAAA,KAAK,CAAC;AAAEI,QAAAA,EAAE,EAAEjB,IAAI,EAAV;AAAcE,QAAAA,IAAd;AAAoBC,QAAAA;AAApB,OAAD,CAAL;AACA,WAAKe,SAAL;AACH,KAxB+B;;AAAA,SA2BhCF,YA3BgC,GA2BjB,MAAM;AACzB,YAAM;AAAEd,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB,KAAKE,KAA7B;AACQ,YAAM;AAAEc,QAAAA;AAAF,UAAoB,KAAKL,KAA/B;;AACA,UAAI,CAACZ,IAAD,IAAS,CAACC,KAAd,EAAqB;AACjBiB,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,eAAO,KAAP;AACH;;AACD,aAAOD,aAAa,CAACjB,IAAD,CAApB;AACH,KAnC+B;;AAAA,SAsChCgB,SAtCgC,GAsCpB,MAAM,KAAKT,QAAL,CAAcR,cAAd,CAtCc;AAAA;;AA0ChCoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEnB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkB,KAAKE,KAA7B;AAEA,wBAEI;AAAM,MAAA,QAAQ,EAAE,KAAKK,gBAArB;AAAA,8BAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,MAAxB;AAA+B,QAAA,WAAW,EAAC,YAA3C;AAAwD,QAAA,KAAK,EAAER,IAA/D;AAAqE,QAAA,QAAQ,EAAE,KAAKI;AAApF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,KAAZ;AAAkB,QAAA,IAAI,EAAC,OAAvB;AAA+B,QAAA,WAAW,EAAC,oBAA3C;AAAgE,QAAA,KAAK,EAAEH,KAAvE;AAA8E,QAAA,QAAQ,EAAE,KAAKG;AAA7F;AAAA;AAAA;AAAA;AAAA,cAHJ,eAIZ;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJY;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AASP;;AAtDmC;;AAA9BF,W,CACIkB,S,GAAY;AAClBT,EAAAA,KAAK,EAAGf,SAAS,CAACyB,IAAV,CAAeC,UADL;AAElBL,EAAAA,aAAa,EAAErB,SAAS,CAACyB,IAAV,CAAeC;AAFZ,C;AA2DtB,eAAepB,WAAf","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nconst INITIAL__STATE = {\r\n     name: \"\",\r\n        phone: \"\",\r\n}\r\n\r\nclass ContactForm extends Component {\r\n   static propTypes = {\r\n    onAdd : PropTypes.func.isRequired,\r\n    onCheckUnique: PropTypes.func.isRequired,\r\n  };\r\n        \r\n\r\n    state = INITIAL__STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n    \r\n        const { name, value } = target;\r\n        this.setState({[name]: value})\r\n}\r\n\r\n    handleFormSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n        const isValidatedForm = this.validateForm()\r\n        if (!isValidatedForm)   return\r\n        onAdd({ id: uuid(), name, phone })\r\n        this.resetForm()\r\n    }\r\n    \r\n\r\n    validateForm = () => {\r\nconst { name, phone } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !phone) {\r\n            alert('Some fild is empty')\r\n            return false\r\n        }\r\n        return onCheckUnique(name);\r\n    }\r\n    \r\n    \r\n    resetForm = () => this.setState(INITIAL__STATE)\r\n\r\n    \r\n    \r\n    render() {\r\n        const { name, phone } = this.state;\r\n\r\n        return (\r\n\r\n            <form onSubmit={this.handleFormSubmit}>\r\n  \r\n                <input type='text' name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm} />\r\n                <input type='tel' name='phone' placeholder='Enter phone number' value={phone} onChange={this.handleChangeForm }/>\r\n<button type='submit'>Add Contact</button>\r\n            </form>\r\n        )\r\n}\r\n\r\n}\r\n\r\n\r\n\r\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}