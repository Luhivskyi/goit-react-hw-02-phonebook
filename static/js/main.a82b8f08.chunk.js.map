{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactsList/ContactList.js","Components/Filter/Filter.js","App.js","index.js"],"names":["INITIAL__STATE","name","phone","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","number","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a82b8f08.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nconst INITIAL__STATE = {\r\n     name: \"\",\r\n        phone: \"\",\r\n}\r\n\r\nclass ContactForm extends Component {\r\n    state = INITIAL__STATE;\r\n\r\n    handleChangeForm = ({ target }) => {\r\n    \r\n        const { name, value } = target;\r\n        this.setState({[name]: value})\r\n}\r\n\r\n    handleFormSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n        const { name, phone } = this.state;\r\n        const { onAdd } = this.props;\r\n        const isValidatedForm = this.validateForm()\r\n        if (!isValidatedForm)   return\r\n        onAdd({ id: uuid(), name, phone })\r\n        this.resetForm()\r\n    }\r\n    \r\n\r\n    validateForm = () => {\r\nconst { name, phone } = this.state;\r\n        const { onCheckUnique } = this.props;\r\n        if (!name || !phone) {\r\n            alert('Some fild is empty')\r\n            return false\r\n        }\r\n        return onCheckUnique(name);\r\n    }\r\n    \r\n    \r\n    resetForm = () => this.setState(INITIAL__STATE)\r\n\r\n    \r\n    \r\n    render() {\r\n        const { name, phone } = this.state;\r\n\r\n        return (\r\n\r\n            <form onSubmit={this.handleFormSubmit}>\r\n                <input type='text' name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm} />\r\n                <input type='tel' name='phone' placeholder='Enter phone number' value={phone} onChange={this.handleChangeForm }/>\r\n<button type='submit'>Add Contact</button>\r\n            </form>\r\n        )\r\n}\r\n\r\n}\r\n\r\n\r\nContactForm.propTypes = {\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onCheckUnique: PropTypes.func,\r\n};\r\n\r\n\r\nexport default ContactForm;","\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ id, name, phone, onRemove }) => {\r\n    \r\n    return <li>\r\n{name}: {phone} <button onClick={() =>onRemove(id)}>delete</button>\r\n\r\n    </li>\r\n}\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n    \r\n    if (contacts.length === 0) return null\r\n    return (\r\n        <ul>\r\n            {contacts.map(contact => <ContactListItem{...contact} onRemove={onRemove }/>)}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactsList.propTypes = {\r\n  tasks: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;","const Filter = ({filter, onChange}) => {\r\n\r\n    return (\r\n        <input type='text'\r\n            name='filter'\r\n            value={filter}\r\n            onChange={(event) => onChange(event.target.value)}\r\n            placeholder='Enter name for Search' />\r\n    )\r\n}\r\n\r\nexport default Filter","import { Component } from 'react';\r\n\r\nimport ContactForm from './Components/ContactForm';\r\nimport ContactsList from './Components/ContactsList';\r\nimport Filter from './Components/Filter'\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n        ],\r\n        filter: '',\r\n    \r\n    }\r\n\r\n    handleAddContact = (newContact) =>\r\n        this.setState(({ contacts }) => ({\r\n        contacts: [...contacts, newContact],\r\n    \r\n    }))\r\n\r\n    handleCheckUnique = (name) => {\r\n        const { contacts } = this.state;\r\n        const isExistContact = !!contacts.find(contact => contact.name === name)\r\n\r\n        isExistContact && alert('Contact is already exist')\r\n        return !isExistContact\r\n    }\r\n    \r\n    handleRemoveContact = (id) => this.setState(({contacts}) => ({contacts: contacts.filter((contact)=> contact.id !== id)}))\r\n\r\n    handleFilterChange = (filter) => this.setState({ filter })\r\n    \r\n    getVisibleContacts = () => {\r\n        const { contacts, filter } = this.state;\r\n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\r\n    }\r\n\r\n    render() {\r\n        const {  filter }= this.state\r\n        const visibleContacts = this.getVisibleContacts();\r\n        return (\r\n           \r\n            <>\r\n            <h2> Form Contact</h2>\r\n                <ContactForm onAdd={this.handleAddContact} onCheckUnique={this.handleCheckUnique} />\r\n                <h2> Contacts List</h2>\r\n                <ContactsList contacts={visibleContacts} onRemove={this.handleRemoveContact} />\r\n                <h2> Filter</h2>\r\n                <Filter filter={filter} onChange={this.handleFilterChange }/>\r\n        </>\r\n        )\r\n    }\r\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}